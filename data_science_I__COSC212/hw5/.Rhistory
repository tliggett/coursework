ls
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
hofStats$Player
hofStats$Player <- gsub("(.*)\\.*", "\\1", hofStats$Player)
hofStats$Player
hofStats$Player <- gsub("(.*)\.*", "\\1", hofStats$Player)
hofStats$Player <- gsub("(.*)\\.*", "\\1", hofStats$Player)
hofStats$Player
hofStats$Player <- gsub("(.*)\\.*", "", hofStats$Player)
hofStats$Player
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
hofStats$Player <- gsub("\\.*", "", hofStats$Player)
hofStats$Player
hofStats$Player <- gsub("\\(.*)", "", hofStats$Player)
hofStats$Player
hofStats$Player <- gsub("\\(.*)", "", hofStats$Player)
hofStats$Player
hofStats$Player <- gsub("\\.*", "", hofStats$Player)
hofStats$Player
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The standard error for the data is just the sd of the sample means
cat("Standard error: ", sd(SampleMeans))
# The standard error for the data is just the sd of the sample means
error <- sd(SampleMeans)
cat("Standard error: ", error)
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
hofStats <- read.csv("hof.csv")
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
# CS 212 Homework 5
# TJ Liggett
# For my data set, I'm going to average the games played of all players in the pro football hall of fame
# NOTE: The data came in a little messy, so I might have to clean it up to get her running.
hofStats <- read.csv("hof.csv")
str(hofStats)
summary(hofStats)
# It appears games played is located under column G. The min is 46 and the max is 382, so that column itself is
#probably clean
#renaming the column
colnames(hofStats)[colnames(hofStats)=="G"] <- "games.played"
summary(hofStats$games.played)
hofStats$Player
#The names column came in ugly, with some junk on the end of all the names. I'm going to clean this up using regex
#NOTE: while this is outside the scope of the assignment, it's bothering me and I might use this data again
# hofStats$Player <- gsub("\\.*", "", hofStats$Player)
# hofStats$Player
SampleMeans <- replicate(10000, mean(sample(hofStats$games.played, size=20, replace=TRUE)))
hist(SampleMeans)
# The histogram showed a normal distribution of sample means
# Calculating the sampling mean and standard error
# The standard error for the data is just the sd of the sample means
samplingMean <- mean(SampleMeans)
error <- sd(SampleMeans)
cat("Sampling Mean",samplingMean, "Standard error: ", error)
# The distribution cut points of 2.5% and 97.5% are the sampling mean +/- 2 standard errors
cat("Distribution cut points 2.5%: ", samplingMean - (2*error), " | 97.5%: ", samplingMean + (2*error))
# With these cut points, we can be 95% confident the sample lies between them
# For my run, I am 95% sure that the average games played of a hall of fame NFL player is between 142 and 189
# If we obtain a new sample mean that is outside this range, we can infer something different is going on with the data
expected <- function(x, px){
sum <- 0
for(i in length(x))
{
sum <- sum + (x[i] * px[i])
}
return(sum)
}
variance <- function(x, px, ex){
sum <- 0
for(i in 1:length(x))
{
sum <- sum + ((x[i] - ex) * ((x[i] - ex) * px[i])
}
return(sum)
}
x <- c(1,2,4,8,16)
px <- c(0.05,.1,.35,.45,.05)
expected(x, px)
expected <- function(x, px){
sum <- 0
for(i in length(x)){
sum <- sum + (x[i] * px[i])
}
return(sum)
}
variance <- function(x, px, ex){
sum <- 0
for(i in 1:length(x)){
sum <- sum + ((x[i] - ex) * ((x[i] - ex) * px[i])
}
return(sum)
}
variance <- function(x, px, ex){
sum <- 0
for(i in 1:length(x)){
sum <- sum + ((x[i] - ex) * (x[i] - ex) * px[i])
}
return(sum)
}
x <- c(1,2,4,8,16)
px <- c(0.05,.1,.35,.45,.05)
expected(x, px)
expected <- function(x, px){
sum <- 0
for(i in 1:length(x)){
sum <- sum + (x[i] * px[i])
}
return(sum)
}
variance <- function(x, px, ex){
sum <- 0
for(i in 1:length(x)){
sum <- sum + ((x[i] - ex) * (x[i] - ex) * px[i])
}
return(sum)
}
x <- c(1,2,4,8,16)
px <- c(0.05,.1,.35,.45,.05)
expected(x, px)
variance(x, px, expected(x,px))
x <- c(16,18,29)
x <- c(16,18,20)
px <- c(.5,.3,.2)
expected(x, px)
expectedsq <- function(x, px){
sum <- 0
for(i in 1:length(x)){
sum <- sum + (x[i]* x[i] * px[i])
}
return(sum)
}
expectedsq(x,px)
variance(x,px, expected(x,px))
17.4 * 68
1183.2 - 650
2.44 * 68 - 650
17.4 - 0.008(17.4*17.4)
17.4 - 0.008*17.4*17.4
2.44/17.4
533.2 * .1402299
