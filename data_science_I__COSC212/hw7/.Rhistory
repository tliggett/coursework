addresses <- stateCaps$Address
print(addresses)
# fixes
# addresses[3] <- "1700 W Washington, Phoenix, AZ 85007"
# addresses[24] <- "400 High St, Jackson, MS 39201"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 50)
longitude <- rep(0.0, 50)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
# Loop method (helpful for debugging addresses)
for (indx in c(19:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
# fixes
# addresses[3] <- "1700 W Washington, Phoenix, AZ 85007"
# addresses[24] <- "400 High St, Jackson, MS 39201"
addresses[18]
# fixes
# addresses[3] <- "1700 W Washington, Phoenix, AZ 85007"
# addresses[24] <- "400 High St, Jackson, MS 39201"
addresses[18] <- "411 Legislative Ave, Dover, DE 19901"
# Loop method (helpful for debugging addresses)
for (indx in c(18:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
# Loop method (helpful for debugging addresses)
for (indx in c(21:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
# Loop method (helpful for debugging addresses)
for (indx in c(21:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
addresses[47] <- "SW 8th and SW Van Buren, Topeka, KS 66612"
# Loop method (helpful for debugging addresses)
for (indx in c(21:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
# Loop method (helpful for debugging addresses)
for (indx in c(48:49)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
stateCaps <- read.csv("https://www.codetj.com/caps1.csv", stringsAsFactors = FALSE)
stateCaps <- read.csv("caps1.csv", stringsAsFactors = FALSE)
addresses <- stateCaps$Address
print(addresses)
# fixes
# addresses[3] <- "1700 W Washington, Phoenix, AZ 85007"
# addresses[24] <- "400 High St, Jackson, MS 39201"
addresses[18] <- "411 Legislative Ave, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "SW 8th and SW Van Buren, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 50)
longitude <- rep(0.0, 50)
# Loop method (helpful for debugging addresses)
for (indx in c(48:49)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
# Alternate method (no loops).  Each record is returned in a list element...
locs <- lapply(addresses, street2coordinates)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(48:49)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
addresses[47] <- "120 SW 10th Ave # 1, Topeka, KS 66612"
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
addresses[18] <- "150 Martin Luther King Jr Blvd S, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "120 SW 10th Ave # 1, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
addresses[47] <- "120 SW 10th Ave, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
# Alternate method (no loops).  Each record is returned in a list element...
locs <- lapply(addresses, street2coordinates)
View(loc)
View(locs)
View(locsLoop)
View(locs)
L
library(RDSTK)
library(readxl)
stateCaps <- read.csv("caps1.csv", stringsAsFactors = FALSE)
addresses <- stateCaps$Address
print(addresses)
# fixes
addresses[18] <- "150 Martin Luther King Jr Blvd S, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "120 SW 10th Ave, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple
library(ggplot2)
library(ggmap)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
us <- map_data("state")
install.packages("maps")
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple
install.packages("mapproj")
map.simple
map.simple
map.simple <- map.simple + geom_point(data=od.companies, aes(x = geoCode$lon, y = geoCode$lat, color=sizes))
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color=sizes))
map.simple
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude))
map.simple
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude))
map.simple
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
library(RDSTK)
library(ggplot2)
library(ggmap)
stateCaps <- read.csv("caps1.csv", stringsAsFactors = FALSE)
addresses <- stateCaps$Address
print(addresses)
# fixes
addresses[18] <- "150 Martin Luther King Jr Blvd S, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "120 SW 10th Ave, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
stateCaps <- read.csv("https://www.codetj.com/caps1.csv", stringsAsFactors = FALSE)
library(RDSTK)
library(ggplot2)
library(ggmap)
stateCaps <- read.csv("https://www.codetj.com/caps1.csv", stringsAsFactors = FALSE)
View(stateCaps)
stateCaps <- read.csv("https://www.codetj.com/caps1.csv", stringsAsFactors = FALSE)
addresses <- stateCaps$Address
print(addresses)
addresses[18] <- "150 Martin Luther King Jr Blvd S, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "120 SW 10th Ave, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = dummyDF$state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
View(dummyDF)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(data = locsLoop, aes(x = longitude, y = latitude, color="black"))
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"), shape = 1)
View(locsLoop)
locsLoop <- data.frame(addresses, latitude, longitude)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
map.simple + geom_point(aes(x = -100, y = 30))
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"), shape = 1, inherit.aes = FALSE)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("basic map of continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple + geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude), inherit.aes = FALSE)
library(RDSTK)
library(ggplot2)
library(ggmap)
stateCaps <- read.csv("https://www.codetj.com/caps1.csv", stringsAsFactors = FALSE)
addresses <- stateCaps$Address
print(addresses)
# fixes
addresses[18] <- "150 Martin Luther King Jr Blvd S, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "120 SW 10th Ave, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude), inherit.aes = FALSE) +
geom_text()
map.simple
library(RDSTK)
library(ggplot2)
library(ggmap)
stateCaps <- read.csv("https://www.codetj.com/caps1.csv", stringsAsFactors = FALSE)
addresses <- stateCaps$Address
print(addresses)
# fixes
addresses[18] <- "150 Martin Luther King Jr Blvd S, Dover, DE 19901"
addresses[21] <- "300 Capitol Ave, Hartford, CT 06106"
addresses[47] <- "120 SW 10th Ave, Topeka, KS 66612"
#addresses[28] <- "101 North Carson Street, Carson City, Nevada"
latitude <- rep(0.0, 48)
longitude <- rep(0.0, 48)
# Loop method (helpful for debugging addresses)
for (indx in c(1:48)) {
print(indx)
print(addresses[indx])
loc <- street2coordinates(addresses[indx])
print(loc)
latitude[indx] <- loc$latitude
longitude[indx] <- loc$longitude
}
locsLoop <- data.frame(addresses, latitude, longitude)
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude), inherit.aes = FALSE)
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="red")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude), inherit.aes = FALSE)
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color = "red"), inherit.aes = FALSE)
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color = "red", size = 5), inherit.aes = FALSE)
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color = "red", size = 2), inherit.aes = FALSE)
map.simple
us <- map_data("state")
dummyDF <- data.frame(state.name, stringsAsFactors=FALSE)
dummyDF$state <- tolower(dummyDF$state.name)
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color = "red", size = 1), inherit.aes = FALSE)
map.simple
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color = "red"), inherit.aes = FALSE)
map.simple
map.simple <- ggplot(dummyDF, aes(map_id = state))
map.simple <- map.simple + geom_map(map = us, fill="white", color="black")
map.simple <- map.simple + expand_limits(x = us$long, y = us$lat)
map.simple <- map.simple + coord_map() + ggtitle("Location of State Capitols in the Continental USA")
# map.simple <- map.simple + geom_point(data=locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color="black"))
map.simple <- map.simple +
geom_point(data = locsLoop, aes(x = locsLoop$longitude, y = locsLoop$latitude, color = "red"), show.legend = FALSE,  inherit.aes = FALSE)
map.simple
