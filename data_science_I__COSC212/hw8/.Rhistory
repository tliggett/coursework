#Use a web file: Note the web location for the speech
sbaLocation <- URLencode("https://www.gutenberg.org/files/76/76-0.txt")
# Read and parse HTML file
doc.html = htmlTreeParse(sbaLocation, useInternal = TRUE)
library(XML)
library(tm)
install.packages("XML")
install.packages("tm")
library(XML)
library(tm)
library(XML)
library(tm)
library(XML)
library(tm)
#Use a web file: Note the web location for the speech
sbaLocation <- URLencode("https://www.gutenberg.org/files/76/76-0.txt")
# Read and parse HTML file
doc.html = htmlTreeParse(sbaLocation, useInternal = TRUE)
# Extract all the paragraphs (HTML tag is p, starting at
# the root of the document). Unlist flattens the list to
# create a character vector.
sba = unlist(xpathApply(doc.html, '//p', xmlValue))
head(sba, 3)
sbaFile <- "https://www.gutenberg.org/files/76/76-0.txt"    # File that the speech text was saved to
# using scan
# ----------
sba <- scan(sbaFile, character(0), sep="\n")  # Lines are separated by a newline character
head(sba,3)
#use readLines
sba <- readLines(sbaFile)
head(sba, 3)
sbaFile <- "https://www.gutenberg.org/files/76/76-0.txt"    # File that the speech text was saved to
#use readLines
sba <- readLines(sbaFile)
head(sba, 3)
library(XML)
library(tm)
# using the tm package
# --------------------
words.vec <- VectorSource(sba)
words.corpus <- Corpus(words.vec)
words.corpus
words.corpus <- tm_map(words.corpus, content_transformer(tolower))
words.corpus <- tm_map(words.corpus, removePunctuation)
words.corpus <- tm_map(words.corpus, removeNumbers)
words.corpus <- tm_map(words.corpus, removeWords, stopwords("english"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
# WordClouds
# ----------
library(wordcloud)
cloudFrame <- data.frame(word = names(wordCounts), freq=wordCounts)
wordcloud(cloudFrame$word, cloudFrame$freq)
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))
install.packages("wordcloud")
# WordClouds
# ----------
library(wordcloud)
cloudFrame <- data.frame(word = names(wordCounts), freq=wordCounts)
wordcloud(cloudFrame$word, cloudFrame$freq)
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english"), "got", "said", "get", "“", "”"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
# using the tm package
# --------------------
words.vec <- VectorSource(sba)
words.corpus <- Corpus(words.vec)
words.corpus
words.corpus <- tm_map(words.corpus, content_transformer(tolower))
words.corpus <- tm_map(words.corpus, removePunctuation)
words.corpus <- tm_map(words.corpus, removeNumbers)
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english"), "got", "said", "get", "“", "”"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(cloudFrame$word, cloudFrame$freq)
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))
sbaFile <- "https://www.gutenberg.org/files/120/120-0.txt"
#use readLines
sba <- readLines(sbaFile)
head(sba, 3)
library(XML)
library(tm)
# using the tm package
# --------------------
words.vec <- VectorSource(sba)
words.corpus <- Corpus(words.vec)
words.corpus
words.corpus <- tm_map(words.corpus, content_transformer(tolower))
words.corpus <- tm_map(words.corpus, removePunctuation)
words.corpus <- tm_map(words.corpus, removeNumbers)
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english"), "got", "said", "get", "“", "”"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
sbaFile <- "https://www.gutenberg.org/files/120/120-0.txt"
#use readLines
sba <- readLines(sbaFile)
sba <- gsub("“", "\"", sba)
sba <- gsub("”", "\"", sba)
head(sba, 3)
library(XML)
library(tm)
# using the tm package
# --------------------
words.vec <- VectorSource(sba)
words.corpus <- Corpus(words.vec)
words.corpus
words.corpus <- tm_map(words.corpus, content_transformer(tolower))
words.corpus <- tm_map(words.corpus, removePunctuation)
words.corpus <- tm_map(words.corpus, removeNumbers)
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english")))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english"), "said"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
# WordClouds
# ----------
library(wordcloud)
cloudFrame <- data.frame(word = names(wordCounts), freq=wordCounts)
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "YlOrBr"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "YlOrBr"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "YlOrBr"))
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english"), "said", "like"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
words.corpus <- tm_map(words.corpus, removePunctuation)
words.corpus <- tm_map(words.corpus, removeNumbers)
words.corpus <- tm_map(words.corpus, removeWords, c(stopwords("english"), "said", "like"))
tdm <- TermDocumentMatrix(words.corpus)
tdm
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing=TRUE)
head(wordCounts)
# WordClouds
# ----------
library(wordcloud)
cloudFrame <- data.frame(word = names(wordCounts), freq=wordCounts)
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "YlOrBr"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Pastel1"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Pastel1"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Spectral"))
50
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Spectral"))
wordcloud(names(wordCounts), wordCounts, min.freq=20, max.words=50, rot.per=0.35,
use.r.layout=FALSE, colors=brewer.pal(8, "Spectral"))
