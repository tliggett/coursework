geom_line(aes(y = Thread_Data$omp.real.1, colour = "trial 1")) +
geom_point(aes(y = Thread_Data$omp.real.1, colour = "trial 1")) +
geom_line(aes(y = Thread_Data$omp.real.2, colour = "trial 2")) +
geom_point(aes(y = Thread_Data$omp.real.2, colour = "trial 2")) +
geom_line(aes(y = Thread_Data$omp.real.3, colour = "trial 3")) +
geom_point(aes(y = Thread_Data$omp.real.3, colour = "trial 3")) +
scale_x_continuous(name = "Number of Processes", breaks = c(1,2,3,4,5,6,7,8,9,10), limits = c(1,10)) +
scale_y_continuous(name = "Runtime (seconds)", limits = c(100,200)) +
theme_bw() + labs(title = "omp() Real Time Trials 1-3")
#PThread Graph
ggplot(Thread_Data, aes(Thread_Data$Processes)) +
geom_line(aes(y = Thread_Data$pthread.real.1, colour = "trial 1")) +
geom_point(aes(y = Thread_Data$pthread.real.1, colour = "trial 1")) +
geom_line(aes(y = Thread_Data$pthread.real.2, colour = "trial 2")) +
geom_point(aes(y = Thread_Data$pthread.real.2, colour = "trial 2")) +
geom_line(aes(y = Thread_Data$pthread.real.3, colour = "trial 3")) +
geom_point(aes(y = Thread_Data$pthread.real.3, colour = "trial 3")) +
scale_x_continuous(name = "Number of Processes", breaks = c(1,2,3,4,5,6,7,8,9,10), limits = c(1,10)) +
scale_y_continuous(name = "Runtime (seconds)", limits = c(100,200)) +
theme_bw() + labs(title = "pthread() Real Time Trials 1-3")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
setwd("D:/HCNC")
Need_Data <- read.csv("Needs with Unmet Reason.csv")
setnames(Need_Data, old = c("Client.ID","Code","Date.Added","Reason.Unmet","Outcome","Provider","Status"), new = c("ID","Code","DateAdded","ReasonUnmet","Outcome","Provider","Status"))
Need_Data$Provider <- as.character(Need_Data$Provider)
Need_Data$Provider <- ifelse(Need_Data$Provider == 'FEEDING SOUTH DAKOTA', 'Sioux Falls Food Pantry - Feeding South Dakota', Need_Data$Provider)
summary(as.factor(Need_Data$Status))
Need_Data_Closed <- Need_Data[which(Need_Data$Status == "Closed"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_ID <- Need_Data[which(Need_Data$Status == "Identified"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_IP <- Need_Data[which(Need_Data$Status == "In Progress"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_Open <- Need_Data[which(Need_Data$Status == "Open"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
summary(as.factor(Need_Data_Closed$Outcome))
summary(as.factor(Need_Data_ID$Outcome))
summary(as.factor(Need_Data_IP$Outcome))
summary(as.factor(Need_Data_Open$Outcome))
Need_Data_Closed <- Need_Data[which(Need_Data$Status == "Closed"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_ID <- Need_Data[which(Need_Data$Status == "Identified"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_IP <- Need_Data[which(Need_Data$Status == "In Progress"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_Open <- Need_Data[which(Need_Data$Status == "Open"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
summary(as.factor(Need_Data_Closed$Outcome))
summary(as.factor(Need_Data_ID$Outcome))
summary(as.factor(Need_Data_IP$Outcome))
summary(as.factor(Need_Data_Open$Outcome))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
setwd("D:/HCNC")
Need_Data <- read.csv("Needs with Unmet Reason.csv")
setnames(Need_Data, old = c("Client.ID","Code","Date.Added","Reason.Unmet","Outcome","Provider","Status"), new = c("ID","Code","DateAdded","ReasonUnmet","Outcome","Provider","Status"))
Need_Data$Provider <- as.character(Need_Data$Provider)
Need_Data$Provider <- ifelse(Need_Data$Provider == 'FEEDING SOUTH DAKOTA', 'Sioux Falls Food Pantry - Feeding South Dakota', Need_Data$Provider)
summary(as.factor(Need_Data$Status))
Need_Data_Closed <- Need_Data[which(Need_Data$Status == "Closed"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_ID <- Need_Data[which(Need_Data$Status == "Identified"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_IP <- Need_Data[which(Need_Data$Status == "In Progress"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_Open <- Need_Data[which(Need_Data$Status == "Open"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
summary(as.factor(Need_Data_Closed$Outcome))
summary(as.factor(Need_Data_ID$Outcome))
summary(as.factor(Need_Data_IP$Outcome))
summary(as.factor(Need_Data_Open$Outcome))
summary(as.factor(Need_Data_Closed$ReasonUnmet))
summary(as.factor(Need_Data_ID$ReasonUnmet))
summary(as.factor(Need_Data_IP$ReasonUnmet))
summary(as.factor(Need_Data_Open$ReasonUnmet))
ProviderData_Closed <- as.data.frame(summary(as.factor(Need_Data_Closed$Provider)))
ProviderData_ID <-as.data.frame(summary(as.factor(Need_Data_ID$Provider)))
ProviderData_IP <- as.data.frame(summary(as.factor(Need_Data_IP$Provider)))
ProviderData_Open <- as.data.frame(summary(as.factor(Need_Data_Open$Provider)))
ProviderData = merge(ProviderData_Closed, ProviderData_ID, by = 0,  all = T)
ProviderData2 = merge(ProviderData_IP, ProviderData_Open, by = 0,  all = T)
ProviderData = merge(ProviderData, ProviderData2, by = "Row.names",  all = T)
OutcomeFM <- Need_Data[which(Need_Data$Outcome == "Fully Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePM <- Need_Data[which(Need_Data$Outcome == "Partially Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNM <- Need_Data[which(Need_Data$Outcome == "Not Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePending <- Need_Data[which(Need_Data$Outcome == "Service Pending"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeBlank <- Need_Data[which(Need_Data$Outcome == ""), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeOA <- Need_Data[which(Need_Data$Outcome == "Outside Agency- Unknown"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNotAccept <- Need_Data[which(Need_Data$Outcome == "Partner Agency Not Accepting Referrals"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
ProviderFM <- as.data.frame(summary(as.factor(OutcomeFM$Provider)))
ProviderPM <- as.data.frame(summary(as.factor(OutcomePM$Provider)))
ProviderNM <- as.data.frame(summary(as.factor(OutcomeNM$Provider)))
ProviderPending <- as.data.frame(summary(as.factor(OutcomePending$Provider)))
ProviderBlank <- as.data.frame(summary(as.factor(OutcomeBlank$Provider)))
ProviderOA <- as.data.frame(summary(as.factor(OutcomeOA$Provider)))
ProviderNotAccept <- as.data.frame(summary(as.factor(OutcomeNotAccept$Provider)))
Provider0 = merge(ProviderFM, ProviderPM, by = 0, all = T)
Provider1 = merge(ProviderNM, ProviderPending, by = 0, all = T)
Provider2 = merge(ProviderBlank, ProviderOA, by = 0, all = T)
ProviderOutcome = merge(Provider0, Provider1, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, Provider2, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, ProviderNotAccept, by.x = "Row.names", by.y = 0, all = T)
View(OutcomeBlank)
ggplot(df, aes(x=OutcomeBlank$DateAdded)) +
geom_histogram(binwidth=1)
ggplot(df, aes(OutcomeBlank$DateAdded)) +
geom_histogram(binwidth=1)
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(binwidth=1)
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram()
ggplot(OutcomeBlank) +
geom_histogram(aes(OutcomeBlank$DateAdded))
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(binwidth = 5)
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count", binwidth = 5)
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count", binwidth = 10)
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count", binwidth = 20)
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count")
OutcomeBlank$DateAdded <- as.date(OutcomeBlank$DateAdded)
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
setwd("D:/HCNC")
Need_Data <- read.csv("Needs with Unmet Reason.csv")
setnames(Need_Data, old = c("Client.ID","Code","Date.Added","Reason.Unmet","Outcome","Provider","Status"), new = c("ID","Code","DateAdded","ReasonUnmet","Outcome","Provider","Status"))
Need_Data$Provider <- as.character(Need_Data$Provider)
Need_Data$Provider <- ifelse(Need_Data$Provider == 'FEEDING SOUTH DAKOTA', 'Sioux Falls Food Pantry - Feeding South Dakota', Need_Data$Provider)
summary(as.factor(Need_Data$Status))
Need_Data_Closed <- Need_Data[which(Need_Data$Status == "Closed"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_ID <- Need_Data[which(Need_Data$Status == "Identified"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_IP <- Need_Data[which(Need_Data$Status == "In Progress"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_Open <- Need_Data[which(Need_Data$Status == "Open"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
summary(as.factor(Need_Data_Closed$Outcome))
summary(as.factor(Need_Data_ID$Outcome))
summary(as.factor(Need_Data_IP$Outcome))
summary(as.factor(Need_Data_Open$Outcome))
summary(as.factor(Need_Data_Closed$ReasonUnmet))
summary(as.factor(Need_Data_ID$ReasonUnmet))
summary(as.factor(Need_Data_IP$ReasonUnmet))
summary(as.factor(Need_Data_Open$ReasonUnmet))
ProviderData_Closed <- as.data.frame(summary(as.factor(Need_Data_Closed$Provider)))
ProviderData_ID <-as.data.frame(summary(as.factor(Need_Data_ID$Provider)))
ProviderData_IP <- as.data.frame(summary(as.factor(Need_Data_IP$Provider)))
ProviderData_Open <- as.data.frame(summary(as.factor(Need_Data_Open$Provider)))
ProviderData = merge(ProviderData_Closed, ProviderData_ID, by = 0,  all = T)
ProviderData2 = merge(ProviderData_IP, ProviderData_Open, by = 0,  all = T)
ProviderData = merge(ProviderData, ProviderData2, by = "Row.names",  all = T)
OutcomeFM <- Need_Data[which(Need_Data$Outcome == "Fully Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePM <- Need_Data[which(Need_Data$Outcome == "Partially Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNM <- Need_Data[which(Need_Data$Outcome == "Not Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePending <- Need_Data[which(Need_Data$Outcome == "Service Pending"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeBlank <- Need_Data[which(Need_Data$Outcome == ""), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeOA <- Need_Data[which(Need_Data$Outcome == "Outside Agency- Unknown"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNotAccept <- Need_Data[which(Need_Data$Outcome == "Partner Agency Not Accepting Referrals"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
ProviderFM <- as.data.frame(summary(as.factor(OutcomeFM$Provider)))
ProviderPM <- as.data.frame(summary(as.factor(OutcomePM$Provider)))
ProviderNM <- as.data.frame(summary(as.factor(OutcomeNM$Provider)))
ProviderPending <- as.data.frame(summary(as.factor(OutcomePending$Provider)))
ProviderBlank <- as.data.frame(summary(as.factor(OutcomeBlank$Provider)))
ProviderOA <- as.data.frame(summary(as.factor(OutcomeOA$Provider)))
ProviderNotAccept <- as.data.frame(summary(as.factor(OutcomeNotAccept$Provider)))
Provider0 = merge(ProviderFM, ProviderPM, by = 0, all = T)
Provider1 = merge(ProviderNM, ProviderPending, by = 0, all = T)
Provider2 = merge(ProviderBlank, ProviderOA, by = 0, all = T)
ProviderOutcome = merge(Provider0, Provider1, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, Provider2, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, ProviderNotAccept, by.x = "Row.names", by.y = 0, all = T)
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
setwd("D:/HCNC")
Need_Data <- read.csv("Needs with Unmet Reason.csv")
setnames(Need_Data, old = c("Client.ID","Code","Date.Added","Reason.Unmet","Outcome","Provider","Status"), new = c("ID","Code","DateAdded","ReasonUnmet","Outcome","Provider","Status"))
Need_Data$Provider <- as.character(Need_Data$Provider)
Need_Data$Provider <- ifelse(Need_Data$Provider == 'FEEDING SOUTH DAKOTA', 'Sioux Falls Food Pantry - Feeding South Dakota', Need_Data$Provider)
summary(as.factor(Need_Data$Status))
Need_Data_Closed <- Need_Data[which(Need_Data$Status == "Closed"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_ID <- Need_Data[which(Need_Data$Status == "Identified"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_IP <- Need_Data[which(Need_Data$Status == "In Progress"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_Open <- Need_Data[which(Need_Data$Status == "Open"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
summary(as.factor(Need_Data_Closed$Outcome))
summary(as.factor(Need_Data_ID$Outcome))
summary(as.factor(Need_Data_IP$Outcome))
summary(as.factor(Need_Data_Open$Outcome))
summary(as.factor(Need_Data_Closed$ReasonUnmet))
summary(as.factor(Need_Data_ID$ReasonUnmet))
summary(as.factor(Need_Data_IP$ReasonUnmet))
summary(as.factor(Need_Data_Open$ReasonUnmet))
ProviderData_Closed <- as.data.frame(summary(as.factor(Need_Data_Closed$Provider)))
ProviderData_ID <-as.data.frame(summary(as.factor(Need_Data_ID$Provider)))
ProviderData_IP <- as.data.frame(summary(as.factor(Need_Data_IP$Provider)))
ProviderData_Open <- as.data.frame(summary(as.factor(Need_Data_Open$Provider)))
ProviderData = merge(ProviderData_Closed, ProviderData_ID, by = 0,  all = T)
ProviderData2 = merge(ProviderData_IP, ProviderData_Open, by = 0,  all = T)
ProviderData = merge(ProviderData, ProviderData2, by = "Row.names",  all = T)
OutcomeFM <- Need_Data[which(Need_Data$Outcome == "Fully Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePM <- Need_Data[which(Need_Data$Outcome == "Partially Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNM <- Need_Data[which(Need_Data$Outcome == "Not Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePending <- Need_Data[which(Need_Data$Outcome == "Service Pending"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeBlank <- Need_Data[which(Need_Data$Outcome == ""), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeOA <- Need_Data[which(Need_Data$Outcome == "Outside Agency- Unknown"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNotAccept <- Need_Data[which(Need_Data$Outcome == "Partner Agency Not Accepting Referrals"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
ProviderFM <- as.data.frame(summary(as.factor(OutcomeFM$Provider)))
ProviderPM <- as.data.frame(summary(as.factor(OutcomePM$Provider)))
ProviderNM <- as.data.frame(summary(as.factor(OutcomeNM$Provider)))
ProviderPending <- as.data.frame(summary(as.factor(OutcomePending$Provider)))
ProviderBlank <- as.data.frame(summary(as.factor(OutcomeBlank$Provider)))
ProviderOA <- as.data.frame(summary(as.factor(OutcomeOA$Provider)))
ProviderNotAccept <- as.data.frame(summary(as.factor(OutcomeNotAccept$Provider)))
Provider0 = merge(ProviderFM, ProviderPM, by = 0, all = T)
Provider1 = merge(ProviderNM, ProviderPending, by = 0, all = T)
Provider2 = merge(ProviderBlank, ProviderOA, by = 0, all = T)
ProviderOutcome = merge(Provider0, Provider1, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, Provider2, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, ProviderNotAccept, by.x = "Row.names", by.y = 0, all = T)
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count")
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count", binwidth = 5)
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m/%Y"), breaks = date_breaks("2 weeks"))
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m/%Y"))
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date()
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(breaks = '1 month')
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(breaks = '2 month')
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(breaks = '3 month')
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(breaks = '3 month') +
labs(Title = "Outcome Left Blank Versus Date Added")
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(breaks = '3 month') +
labs(Title = "Outcome Left Blank Versus Date Added") + theme_bw()
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(breaks = '3 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m-$Y"), breaks = '4 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
library(tidyverse)
library(data.table)
require(scales)
require(ggplot2)
setwd("D:/HCNC")
Need_Data <- read.csv("Needs with Unmet Reason.csv")
setnames(Need_Data, old = c("Client.ID","Code","Date.Added","Reason.Unmet","Outcome","Provider","Status"), new = c("ID","Code","DateAdded","ReasonUnmet","Outcome","Provider","Status"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
require(scales)
require(ggplot2)
setwd("D:/HCNC")
Need_Data <- read.csv("Needs with Unmet Reason.csv")
setnames(Need_Data, old = c("Client.ID","Code","Date.Added","Reason.Unmet","Outcome","Provider","Status"), new = c("ID","Code","DateAdded","ReasonUnmet","Outcome","Provider","Status"))
Need_Data$Provider <- as.character(Need_Data$Provider)
Need_Data$Provider <- ifelse(Need_Data$Provider == 'FEEDING SOUTH DAKOTA', 'Sioux Falls Food Pantry - Feeding South Dakota', Need_Data$Provider)
summary(as.factor(Need_Data$Status))
Need_Data_Closed <- Need_Data[which(Need_Data$Status == "Closed"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_ID <- Need_Data[which(Need_Data$Status == "Identified"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_IP <- Need_Data[which(Need_Data$Status == "In Progress"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
Need_Data_Open <- Need_Data[which(Need_Data$Status == "Open"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Outcome","Provider")]
summary(as.factor(Need_Data_Closed$Outcome))
summary(as.factor(Need_Data_ID$Outcome))
summary(as.factor(Need_Data_IP$Outcome))
summary(as.factor(Need_Data_Open$Outcome))
summary(as.factor(Need_Data_Closed$ReasonUnmet))
summary(as.factor(Need_Data_ID$ReasonUnmet))
summary(as.factor(Need_Data_IP$ReasonUnmet))
summary(as.factor(Need_Data_Open$ReasonUnmet))
ProviderData_Closed <- as.data.frame(summary(as.factor(Need_Data_Closed$Provider)))
ProviderData_ID <-as.data.frame(summary(as.factor(Need_Data_ID$Provider)))
ProviderData_IP <- as.data.frame(summary(as.factor(Need_Data_IP$Provider)))
ProviderData_Open <- as.data.frame(summary(as.factor(Need_Data_Open$Provider)))
ProviderData = merge(ProviderData_Closed, ProviderData_ID, by = 0,  all = T)
ProviderData2 = merge(ProviderData_IP, ProviderData_Open, by = 0,  all = T)
ProviderData = merge(ProviderData, ProviderData2, by = "Row.names",  all = T)
OutcomeFM <- Need_Data[which(Need_Data$Outcome == "Fully Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePM <- Need_Data[which(Need_Data$Outcome == "Partially Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNM <- Need_Data[which(Need_Data$Outcome == "Not Met"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomePending <- Need_Data[which(Need_Data$Outcome == "Service Pending"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeBlank <- Need_Data[which(Need_Data$Outcome == ""), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeOA <- Need_Data[which(Need_Data$Outcome == "Outside Agency- Unknown"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
OutcomeNotAccept <- Need_Data[which(Need_Data$Outcome == "Partner Agency Not Accepting Referrals"), names(Need_Data) %in% c("ID", "Code","DateAdded","ReasonUnmet","Provider","Status")]
ProviderFM <- as.data.frame(summary(as.factor(OutcomeFM$Provider)))
ProviderPM <- as.data.frame(summary(as.factor(OutcomePM$Provider)))
ProviderNM <- as.data.frame(summary(as.factor(OutcomeNM$Provider)))
ProviderPending <- as.data.frame(summary(as.factor(OutcomePending$Provider)))
ProviderBlank <- as.data.frame(summary(as.factor(OutcomeBlank$Provider)))
ProviderOA <- as.data.frame(summary(as.factor(OutcomeOA$Provider)))
ProviderNotAccept <- as.data.frame(summary(as.factor(OutcomeNotAccept$Provider)))
Provider0 = merge(ProviderFM, ProviderPM, by = 0, all = T)
Provider1 = merge(ProviderNM, ProviderPending, by = 0, all = T)
Provider2 = merge(ProviderBlank, ProviderOA, by = 0, all = T)
ProviderOutcome = merge(Provider0, Provider1, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, Provider2, by = "Row.names", all = T)
ProviderOutcome = merge(ProviderOutcome, ProviderNotAccept, by.x = "Row.names", by.y = 0, all = T)
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
OutcomeBlank$DateAdded <- as.Date(OutcomeBlank$DateAdded, "%m/%d/%Y")
plot <- ggplot(OutcomeBlank, aes(OutcomeBlank$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
png("charts/OutcomeBlank.png")
print(plot)
dev.off()
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme_bw()
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=2))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 2))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 5))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = -1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = -0.5))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = -0.25))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = -0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = -0.01))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code, color = "blue")) +
geom_histogram(stat="count") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", color = "blue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "blue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "lightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "navy") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "indigo") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1))
ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Outcome Not Met versus Need Code", x = "Need Code", y = "Total Not Met")
plot <- ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Outcome Not Met versus Need Code", x = "Need Code", y = "Total Not Met")
png("charts/NMvsNeedCode.png")
print(plot)
dev.off()
NMNeedCode <- as.data.frame(summary(as.factor(OutcomeNM$Code)))
View(NMNeedCode)
View(Need_Data)
NeedBreakdown <- as.data.frame(summary(as.factor(Need_Data$Code)))
plot <- ggplot(OutcomeNM, aes(OutcomeNM$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Outcome Not Met versus Need Code", x = "Need Code", y = "Total Not Met")
png("charts/NMvsNeedCode.png")
print(plot)
dev.off()
NMNeedCode <- as.data.frame(summary(as.factor(OutcomeNM$Code)))
View(NeedBreakdown)
CDNFT <- Need_Data[which(Need_Data$ReasonUnmet == "Client Did Not Follow Through"), names(Need_Data) %in% c("ID", "Code","DateAdded","Outcome","Provider","Status")]
CDNFT <- Need_Data[which(Need_Data$ReasonUnmet == "Client Did Not Follow Through"), names(Need_Data) %in% c("ID", "Code","DateAdded","Outcome","Provider","Status")]
ggplot(CDNFT, aes(CDNFT$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Outcome Not Met versus Need Code", x = "Need Code", y = "Total Not Met")
CDNFT <- Need_Data[which(Need_Data$ReasonUnmet == "Client Did Not Follow Through"), names(Need_Data) %in% c("ID", "Code","DateAdded","Outcome","Provider","Status")]
plot <- ggplot(CDNFT, aes(CDNFT$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Client Did Not Follow Through versus Need Code", x = "Need Code", y = "Count")
png("charts/CDNFTvsNeedCode.png")
print(plot)
dev.off()
CDNFTNeedCode <- as.data.frame(summary(as.factor(CDNFT$Code)))
View(CDNFTNeedCode)
CNE <- Need_Data[which(Need_Data$ReasonUnmet == "Client Not Eligible"), names(Need_Data) %in% c("ID", "Code","DateAdded","Outcome","Provider","Status")]
plot <- ggplot(CNE, aes(CNE$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Client Not Eligible Need Breakdown", x = "Need Code", y = "Count")
png("charts/CNEvsNeedCode.png")
print(plot)
dev.off()
CNENeedCode <- as.data.frame(summary(as.factor(CNE$Code)))
View(CNENeedCode)
ASF <- Need_Data[which(Need_Data$ReasonUnmet == "All Services Full"), names(Need_Data) %in% c("ID", "Code","DateAdded","Outcome","Provider","Status")]
plot <- ggplot(ASF, aes(ASF$Code)) +
geom_histogram(stat="count", fill = "midnightblue") +
theme(axis.text.x = element_text(angle=90, hjust=1,vjust = 0.1)) +
labs(title = "Client Not Eligible Need Breakdown", x = "Need Code", y = "Count")
png("charts/CNEvsNeedCode.png")
print(plot)
dev.off()
ASFNeedCode <- as.data.frame(summary(as.factor(ASF$Code)))
View(ASFNeedCode)
Need_Data$DateAdded <- as.Date(Need_Data$DateAdded, "%m/%d/%Y")
plot <- ggplot(Need_Data, aes(Need_Data$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
Need_Data$DateAdded <- as.Date(Need_Data$DateAdded, "%m/%d/%Y")
ggplot(Need_Data, aes(Need_Data$DateAdded)) +
geom_histogram(stat = "count") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Outcome Left Blank Versus Date Added") + theme_bw()
Need_Data$DateAdded <- as.Date(Need_Data$DateAdded, "%m/%d/%Y")
ggplot(Need_Data, aes(Need_Data$DateAdded)) +
geom_histogram(stat = "count", fill = "sandstone") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Need Count by Date Added") + theme_bw()
Need_Data$DateAdded <- as.Date(Need_Data$DateAdded, "%m/%d/%Y")
ggplot(Need_Data, aes(Need_Data$DateAdded)) +
geom_histogram(stat = "count", fill = "tan") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Need Count by Date Added") + theme_bw()
plot <- Need_Data$DateAdded <- as.Date(Need_Data$DateAdded, "%m/%d/%Y")
ggplot(Need_Data, aes(Need_Data$DateAdded)) +
geom_histogram(stat = "count", fill = "tan") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Need Count by Date Added") + theme_bw()
png("charts/NeedDateHistogram.png")
print(plot)
dev.off()
Need_Data$DateAdded <- as.Date(Need_Data$DateAdded, "%m/%d/%Y")
plot <- ggplot(Need_Data, aes(Need_Data$DateAdded)) +
geom_histogram(stat = "count", fill = "tan") +
scale_x_date(labels = date_format("%m-%Y"), breaks = '4 month') +
labs(title = "Need Count by Date Added") + theme_bw()
png("charts/NeedDateHistogram.png")
print(plot)
dev.off()
